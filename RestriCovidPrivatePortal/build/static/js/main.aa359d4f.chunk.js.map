{"version":3,"sources":["css/RestriCovid.module.css","res/img/RestriCovid.png","data/APIController.js","ui/BotonEliminar.js","ui/FormRestricciones.js","main/RestriCovid.js","index.js"],"names":["module","exports","DatosRestricciones","a","datos","fetch","then","response","json","data","catch","error","console","log","RestriccionesCodigoPostal","codigoPostal","url","datosCodigoPostal","Poblaciones","datosPoblaciones","EliminarRestriccionPoblacion","idRestriccion","idPoblacion","method","AsignarRestriccion","status","BotonElimnar","props","onClick","datosRestriccion","id","datosPoblacion","texto","FormRestricciones","useState","arAsignarRestriccion","guardarAsignarRestriccion","datosAdaptados","arAux","forEach","restriccion","push","label","abreviacion","value","adaptarDatos","className","isMulti","options","defaultValue","onChange","e","placeholder","poblacion","restricciones","length","styles","btnAsignarRestriccion","RestriCovid","boolCodigoValidado","guardarCodigoValidado","arRestricciones","guardarArRestricciones","boolMostrarRestricciones","guardarBoolMostrarRestricciones","arPoblaciones","guardarArPoblaciones","arDatosSelect","guardarArSelect","ValidarCodigoPostal","test","MostrarRestricciones","undefined","PrepararRestriccionesSelect","datosRestricciones","CargarPoblaciones","Logo","dImagen","src","logo","alt","dSubtitulo","Restricciones","map","BotonEliminar","useEffect","type","message","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa359d4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dImagen\":\"RestriCovid_dImagen__21YhM\",\"dSubtitulo\":\"RestriCovid_dSubtitulo__OCTNF\",\"dPostal\":\"RestriCovid_dPostal__3mhNX\",\"btnAsignarRestriccion\":\"RestriCovid_btnAsignarRestriccion__3G2Yf\"};","export default __webpack_public_path__ + \"static/media/RestriCovid.ab406c26.png\";","\r\n//Este metodo devuelve todas las restricciones de la api en un array de objetos\r\nexport const DatosRestricciones = async () => {\r\n    //Url para conseguir datos y hook dónde guardaremos los datos\r\n    const url = 'https://localhost:5001/RestriCovid/restricciones';\r\n    let datos = [];\r\n\r\n    await fetch(url).then(response => response.json()).then(data => datos = data)\r\n    .catch(error => console.log(\"error\",error));\r\n    return datos;\r\n}\r\n\r\n\r\n//Este metodo devuelve todas las restricciones de la api en un array de objetos\r\nexport const DatosRestriccionesPoblaciones = async () => {\r\n    //Url para conseguir datos y hook dónde guardaremos los datos\r\n    const url = 'https://localhost:5001/RestriCovid/restriccionesPoblaciones';\r\n    let datos = [];\r\n\r\n    await fetch(url).then(response => response.json()).then(data => datos = data)\r\n    .catch(error => console.log(\"error\",error));\r\n    return datos;\r\n}\r\n\r\n\r\nexport const RestriccionesCodigoPostal = async (codigoPostal) => {\r\n    const url = `https://localhost:5001/RestriCovid/restricciones/${codigoPostal}`;\r\n    let datosCodigoPostal = [];\r\n\r\n    await fetch(url).then(response => response.json()).then(data => datosCodigoPostal = data);\r\n    return datosCodigoPostal;\r\n}\r\n\r\nexport const Poblaciones = async () => {\r\n    const url = 'https://localhost:5001/RestriCovid/poblaciones';\r\n    let datosPoblaciones = [];\r\n\r\n    await fetch(url).then(response => response.json()).then(data => datosPoblaciones = data);\r\n    return datosPoblaciones;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {*} idRestriccion \r\n * envia a la api una peticion delete para eliminar \r\n * la restricción según el id que le pases por parámetro\r\n * ejemplo de url:https://localhost:5001/RestriCovid/deleteRestriccionPoblacion?idRestriccion=1&idPoblacion=1\r\n */\r\nexport const EliminarRestriccionPoblacion = async (idRestriccion,idPoblacion) => {\r\n    console.log(\"idRestriccion => \", idRestriccion, \"idPoblacion => \", idPoblacion);\r\n    let url = `https://localhost:5001/RestriCovid/deleteRestriccionPoblacion/?idRestriccion=${idRestriccion}&idPoblacion=${idPoblacion}`;\r\n    await fetch(url, {method : 'DELETE'}).then(response => {\r\n        console.log(response.json());\r\n    })\r\n    .then(data => console.log(\"Restriccion eliminada => \",data))\r\n    .catch(error => console.log(error)); \r\n}\r\n\r\n//RestriCovid/insertRestriccionPoblacion/?idRestriccion={idRestriccion}&idPoblacion={idPoblacion}\r\nexport const AsignarRestriccion = async (idPoblacion,idRestriccion) => {\r\n    let url = `https://localhost:5001/RestriCovid/insertRestriccionPoblacion/?idRestriccion=${idRestriccion}&idPoblacion=${idPoblacion}`;\r\n    await fetch(url,{method: 'PUT'}).then(response => {\r\n        if(response.status === 200){\r\n            console.log(response.json);\r\n            return response.json();\r\n        }else{\r\n            console.log(response);\r\n        }  \r\n    })\r\n    .then(data => console.log(\"Restriccion insertada => \",data))\r\n    .catch(error => console.log(\"Error\",error)); \r\n}\r\n\r\n\r\nexport default AsignarRestriccion;","import {EliminarRestriccionPoblacion} from '../data/APIController';\r\n\r\n//Este componente se usa en cada panel de restricción para eliminar la propia restricción\r\nexport const BotonElimnar = (props) => {\r\n    return (\r\n        <button onClick={() => EliminarRestriccionPoblacion(props.datosRestriccion.id,props.datosPoblacion.id)}>{props.texto}</button>\r\n    )\r\n}\r\n\r\nexport default BotonElimnar;","import {useState, React} from 'react';\r\nimport Select from 'react-select';\r\nimport styles from '../css/RestriCovid.module.css';\r\nimport {AsignarRestriccion} from '../data/APIController.js'\r\n\r\n\r\nexport const FormRestricciones =  (props) => {\r\n    const [arAsignarRestriccion,guardarAsignarRestriccion] = useState([]);    \r\n\r\n    const adaptarDatos = () => {\r\n        let arAux = []\r\n        props.datos.forEach( restriccion => {\r\n            arAux.push(\r\n                {\r\n                    label:`${restriccion.abreviacion}`,\r\n                    value:restriccion.id\r\n                }\r\n            );\r\n        })\r\n        return arAux;\r\n    }\r\n\r\n    const asignarRestricciones = (poblacion,restricciones) => {\r\n            if(restricciones.length !== 0){\r\n                restricciones.forEach( \r\n                    restriccion => {\r\n                        console.log(\" id poblacion =>\", poblacion, \" id restriccion \", restriccion.value);\r\n                        AsignarRestriccion(poblacion,restriccion.value)\r\n                    }\r\n                )\r\n            }         \r\n    }\r\n\r\n    let datosAdaptados = adaptarDatos();\r\n\r\n    return (\r\n        <>\r\n        <div className={'col-12 text-center'}>\r\n            <Select \r\n                isMulti\r\n                options={datosAdaptados}\r\n                defaultValue={arAsignarRestriccion}\r\n                onChange={(e) => guardarAsignarRestriccion(e)}\r\n                className={'m-auto col-4'}\r\n                placeholder={'Elige las restricciones que quieras asignar'}\r\n            />\r\n            <button onClick={() => asignarRestricciones(props.poblacion.id,arAsignarRestriccion)} className={`${styles.btnAsignarRestriccion}`}>Asignar restriccion</button> \r\n        </div>       \r\n        </>\r\n    )\r\n}\r\nexport default FormRestricciones;","import React, { useState, useEffect } from \"react\";\r\nimport logo from '../res/img/RestriCovid.png';\r\nimport styles from '../css/RestriCovid.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Poblaciones, RestriccionesCodigoPostal, DatosRestriccionesPoblaciones, DatosRestricciones} from '../data/APIController.js';\r\n//import { Input, Button, Alert } from 'antd';\r\nimport { Alert } from 'antd';\r\nimport BotonEliminar from '../ui/BotonEliminar'\r\nimport FormRestricciones from '../ui/FormRestricciones';\r\nimport AsignarRestriccion from '../data/APIController.js'\r\n\r\n\r\n\r\n\r\n//Función principal donde almacenaremos todas las funciones y los componentes\r\nconst RestriCovid = () => {\r\n  //Hooks useState\r\n  const [codigoPostal, guardarCodigoPostal] = useState({value:\"20100\",id:1});\r\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\r\n  const [arRestricciones, guardarArRestricciones] = useState([]);\r\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\r\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\r\n  const [arDatosSelect, guardarArSelect] = useState([]);\r\n  \r\n  /**\r\n   * Esta función valida el código postal asegurandose de que hay\r\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\r\n   * \r\n   * @param {str} codigoPostal \r\n   * @returns false || true\r\n   */\r\n  const ValidarCodigoPostal = codigoPostal => {\r\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ?  true : false\r\n  }\r\n\r\n  \r\n\r\n  //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\r\n  const MostrarRestricciones = async codigoPostal => {\r\n    if(ValidarCodigoPostal(codigoPostal) === false){\r\n      guardarCodigoValidado(false);\r\n    }else{\r\n      if(await (await RestriccionesCodigoPostal(codigoPostal)).length !== 0){\r\n        guardarCodigoValidado(true);\r\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\r\n      }else{\r\n        guardarCodigoValidado(undefined);\r\n      }\r\n      \r\n    }\r\n  }\r\n  \r\n\r\n  const PrepararRestriccionesSelect = async () =>{\r\n    let datosRestricciones = await DatosRestricciones();\r\n    if(datosRestricciones !== undefined){\r\n      guardarArSelect(datosRestricciones);\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  /**\r\n   * Esta función es llamada\r\n   * por un hook para cargar las poblaciones\r\n   * lo único que hace es llamar a el metodo importado\r\n   * poblaciones que consigue los datos\r\n   * y después guardarlos en el hook arPoblaciones\r\n   */\r\n  const CargarPoblaciones = async () => {\r\n    let datosPoblaciones = await Poblaciones();\r\n    if(datosPoblaciones !== undefined){\r\n      guardarArPoblaciones(datosPoblaciones);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Este useEffect llama a la funcion que carga las poblaciones\r\n   * una vez se inicia la página para poder generar los marcadores del mapa\r\n   */\r\n  useEffect(() => {\r\n    MostrarRestricciones(codigoPostal.value);\r\n    PrepararRestriccionesSelect();\r\n    if(arPoblaciones.length === 0){\r\n      CargarPoblaciones();\r\n    }\r\n  },);\r\n\r\n  /**\r\n   * Este useEffect activa la generación de tabla de restricciones\r\n   * si los datos de la API han llegado\r\n   */\r\n  useEffect(() => {\r\n    if (arRestricciones !== [] && arRestricciones.length !== 0) {\r\n      guardarBoolMostrarRestricciones(true);\r\n    }\r\n  }, [arRestricciones]);\r\n\r\n\r\n  //Componente que prepara el logo centrado en la parte superior de la página\r\n  function Logo(props) {\r\n    return (\r\n      <>\r\n      <div className={`${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\r\n        <img src={logo} alt=\"Logo RestriCovid\" />  \r\n      </div>\r\n      <div className={`${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\r\n        <h3>Portal privado</h3>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Este componente recorrerá los datos de\r\n   * las restricciones proporcionados por la API\r\n   * y las mostrará en un panel en la parte inferior de\r\n   * la ventana\r\n   */\r\n  function Restricciones(props) {\r\n    return (\r\n      <>\r\n        <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\r\n          <ul className={'list-group'}>\r\n              {props.datosRestricciones.map( restriccion => {\r\n                return(\r\n                  <>\r\n                    <li className={'list-group-item list-group-item-action list-group-item-light mt-2'}>{` ${restriccion.id} :  ${restriccion.abreviacion} `} <BotonEliminar datosRestriccion={restriccion} datosPoblaciones={codigoPostal} texto={'Eliminar restricción'}></BotonEliminar></li>\r\n                  </>\r\n                )\r\n              } )}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className={'mb-5'}>\r\n      <Logo></Logo>\r\n    </div>       \r\n\r\n      {boolMostrarRestricciones === true && boolCodigoValidado === true ? (\r\n        <>\r\n          <div className={`mt-8 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\r\n            <Alert type=\"success\" message=\"Restricciones cargadas correctamente\" />\r\n          </div>\r\n          <div className={`mb-5 mt-3`}>\r\n            <Restricciones datosRestricciones={arRestricciones}></Restricciones>\r\n          </div>\r\n        </>\r\n      ) : boolCodigoValidado === false ? (\r\n        <>\r\n          <div className={`mt-2mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\r\n            <Alert type=\"error\" message=\"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\" />\r\n          </div>\r\n        </>\r\n      ) : boolCodigoValidado === undefined ? (\r\n        <>\r\n          <div className={`mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\r\n            <Alert type=\"error\" message=\"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que está\r\n            introduciendo un código postal de la región del País Vasco\" />\r\n          </div>\r\n        </>\r\n      ) : null}\r\n      <div>\r\n        <FormRestricciones datos={arDatosSelect} poblacion={codigoPostal}></FormRestricciones>\r\n      </div>\r\n    </>\r\n    \r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default RestriCovid;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './css/RestriCovid.module.css';\r\nimport RestriCovid from './main/RestriCovid';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RestriCovid />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}