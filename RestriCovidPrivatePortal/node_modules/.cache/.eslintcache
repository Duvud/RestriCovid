[{"/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/index.js":"1","/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/main/RestriCovid.js":"2","/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/mapa/Mapa.js":"3","/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/data/APIController.js":"4","/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/index.js":"5","/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/main/RestriCovid.js":"6","/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/data/APIController.js":"7","/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/ui/BotonEliminar.js":"8","/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/ui/FormRestricciones.js":"9"},{"size":294,"mtime":1619466559623,"results":"10","hashOfConfig":"11"},{"size":5959,"mtime":1619466559623,"results":"12","hashOfConfig":"11"},{"size":1467,"mtime":1619466559623,"results":"13","hashOfConfig":"11"},{"size":1130,"mtime":1619466559623,"results":"14","hashOfConfig":"11"},{"size":294,"mtime":1619775995920,"results":"15","hashOfConfig":"16"},{"size":5859,"mtime":1620508427296,"results":"17","hashOfConfig":"16"},{"size":1622,"mtime":1620508001042,"results":"18","hashOfConfig":"16"},{"size":380,"mtime":1619894058785,"results":"19","hashOfConfig":"16"},{"size":1399,"mtime":1620511395894,"results":"20","hashOfConfig":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1afpvhe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"sjmpqn",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/index.js",[],"/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/main/RestriCovid.js",[],"/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/mapa/Mapa.js",[],"/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/data/APIController.js",[],"/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/index.js",[],["41","42"],"/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/main/RestriCovid.js",["43","44","45"],"import React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal} from '../data/APIController.js';\nimport { Input, Button, Alert } from 'antd';\nimport BotonEliminar from '../ui/BotonEliminar'\nimport FormRestricciones from '../ui/FormRestricciones';\nimport DatosRestricciones from '../data/APIController'\n\n\n\n//Función principal donde almacenaremos todas las funciones y los componentes\nconst RestriCovid = () => {\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"20100\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  const [arDatosSelect, guardarArSelect] = useState([]);\n  \n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ?  true : false\n  }\n\n  //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n  const MostrarRestricciones = async codigoPostal => {\n    if(ValidarCodigoPostal(codigoPostal) === false){\n      guardarCodigoValidado(false);\n    }else{\n      if(await (await RestriccionesCodigoPostal(codigoPostal)).length !== 0){\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n      }else{\n        guardarCodigoValidado(undefined);\n      }\n      \n    }\n  }\n  \n\n  const PrepararRestriccionesSelect = async () =>{\n    let datosRestricciones = await DatosRestricciones();\n    if(datosRestricciones !== undefined){\n      guardarArSelect(datosRestricciones);\n    }\n  }\n\n  \n  \n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n  const CargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n    if(datosPoblaciones !== undefined){\n      guardarArPoblaciones(datosPoblaciones);\n    }\n  }\n\n\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n  useEffect(() => {\n    MostrarRestricciones(codigoPostal);\n    PrepararRestriccionesSelect();\n    if(arPoblaciones.length === 0){\n      CargarPoblaciones();\n    }\n  },);\n\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n  useEffect(() => {\n    if (arRestricciones !== [] && arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]);\n\n\n  //Componente que prepara el logo centrado en la parte superior de la página\n  function Logo(props) {\n    return (\n      <>\n      <div className={`${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <img src={logo} alt=\"Logo RestriCovid\" />  \n      </div>\n      <div className={`${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <h3>Portal privado</h3>\n      </div>\n      </>\n    );\n  }\n\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n  function Restricciones(props) {\n    return (\n      <>\n        <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n          <ul className={'list-group'}>\n              {props.datosRestricciones.map( restriccion => {\n                return(\n                  <>\n                    <li className={'list-group-item list-group-item-action list-group-item-light mt-2'}>{` ${restriccion.id} :  ${restriccion.abreviacion} `} <BotonEliminar datosRestriccion={restriccion} texto={'Eliminar restricción'}></BotonEliminar></li>\n                  </>\n                )\n              } )}\n          </ul>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n    <div className={'mb-5'}>\n      <Logo></Logo>\n    </div>       \n\n      {boolMostrarRestricciones === true && boolCodigoValidado === true ? (\n        <>\n          <div className={`mt-8 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"success\" message=\"Restricciones cargadas correctamente\" />\n          </div>\n          <div className={`mb-5 mt-3`}>\n            <Restricciones datosRestricciones={arRestricciones}></Restricciones>\n          </div>\n        </>\n      ) : boolCodigoValidado === false ? (\n        <>\n          <div className={`mt-2mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\" />\n          </div>\n        </>\n      ) : boolCodigoValidado === undefined ? (\n        <>\n          <div className={`mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que está\n            introduciendo un código postal de la región del País Vasco\" />\n          </div>\n        </>\n      ) : null}\n      <div>\n        <FormRestricciones datos={arDatosSelect}></FormRestricciones>\n      </div>\n    </>\n    \n    \n\n  );\n}\n\nexport default RestriCovid;","/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/data/APIController.js",[],"/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/ui/BotonEliminar.js",[],"/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/ui/FormRestricciones.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":10,"nodeType":"53","messageId":"54","endLine":6,"endColumn":15},{"ruleId":"51","severity":1,"message":"55","line":6,"column":17,"nodeType":"53","messageId":"54","endLine":6,"endColumn":23},{"ruleId":"51","severity":1,"message":"56","line":16,"column":24,"nodeType":"53","messageId":"54","endLine":16,"endColumn":43},{"ruleId":"51","severity":1,"message":"57","line":23,"column":11,"nodeType":"53","messageId":"54","endLine":23,"endColumn":31},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'guardarCodigoPostal' is assigned a value but never used.","'asignarRestricciones' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]