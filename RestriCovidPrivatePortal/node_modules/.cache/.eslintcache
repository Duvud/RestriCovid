[{"C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\index.js":"1","C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\main\\RestriCovid.js":"2","C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\data\\APIController.js":"3","C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\ui\\BotonEliminar.js":"4","C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\ui\\FormRestricciones.js":"5"},{"size":306,"mtime":1620979266881,"results":"6","hashOfConfig":"7"},{"size":6687,"mtime":1620979266882,"results":"8","hashOfConfig":"7"},{"size":3196,"mtime":1620979266880,"results":"9","hashOfConfig":"7"},{"size":593,"mtime":1620979266890,"results":"10","hashOfConfig":"7"},{"size":1776,"mtime":1620979266891,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yikaz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\index.js",[],"C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\main\\RestriCovid.js",["23","24","25","26","27"],"import React, { useState, useEffect } from \"react\";\r\nimport logo from '../res/img/RestriCovid.png';\r\nimport styles from '../css/RestriCovid.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Poblaciones, RestriccionesCodigoPostal, DatosRestricciones} from '../data/APIController.js';\r\n//import { Input, Button, Alert } from 'antd';\r\nimport { Alert } from 'antd';\r\nimport BotonEliminar from '../ui/BotonEliminar'\r\nimport FormRestricciones from '../ui/FormRestricciones';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\n\r\n//Función principal donde almacenaremos todas las funciones y los componentes\r\nconst RestriCovid = () => {\r\n  //Hooks useState\r\n  const [poblacion, guardarPoblacion] = useState({});\r\n  const [poblacionesSelect, guardarPoblacionesSelect] = useState([]);\r\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\r\n  const [arRestricciones, guardarArRestricciones] = useState([]);\r\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\r\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\r\n  const [arDatosSelect, guardarArSelect] = useState([]);\r\n  const [boolRecargarRestricciones, guardarRecargarRestricciones] = useState(false)\r\n  \r\n  \r\n  //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\r\n  const MostrarRestricciones = async poblacion => {\r\n    let datosRestricciones = await RestriccionesCodigoPostal(poblacion);\r\n    guardarArRestricciones(await RestriccionesCodigoPostal(poblacion));\r\n    if(datosRestricciones.length === 0){\r\n        guardarBoolMostrarRestricciones(false);\r\n    }else{\r\n        guardarBoolMostrarRestricciones(true);\r\n    }\r\n  }\r\n  \r\n  const funcionRecargar = () => {\r\n    guardarRecargarRestricciones(!boolRecargarRestricciones);\r\n  }\r\n\r\n\r\n  const PrepararRestriccionesSelect = async () =>{\r\n    let datosRestricciones = await DatosRestricciones();\r\n    if(datosRestricciones !== undefined){\r\n      guardarArSelect(datosRestricciones);\r\n    }\r\n  }\r\n\r\n  \r\n  \r\n  /**\r\n   * Esta función es llamada\r\n   * por un hook para cargar las poblaciones\r\n   * lo único que hace es llamar a el metodo importado\r\n   * poblaciones que consigue los datos\r\n   * y después guardarlos en el hook arPoblaciones\r\n   */\r\n  const CargarPoblaciones = async () => {\r\n    let datosPoblaciones = await Poblaciones();\r\n    if(datosPoblaciones !== undefined){\r\n      guardarArPoblaciones(datosPoblaciones);\r\n    }\r\n  }\r\n\r\n\r\n  const PrepararPoblacionesSelect = () => {\r\n    let datosPoblacionesSelect = [];\r\n    arPoblaciones.forEach(poblacion => {\r\n        datosPoblacionesSelect.push({label : \"\" + poblacion.poblacion  + \" (\" + poblacion.cp + \")\", value: {id:poblacion.id, codigo: poblacion.cp}});\r\n    }); \r\n    return datosPoblacionesSelect;\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * Este useEffect llama a la funcion que carga las poblaciones\r\n   * una vez se inicia la página para poder generar los marcadores del mapa\r\n   */\r\n  useEffect(() => {\r\n    if(poblacion.value !== undefined)\r\n      MostrarRestricciones(poblacion.value.codigo);\r\n  },[boolRecargarRestricciones,poblacion,arDatosSelect,boolMostrarRestricciones]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    CargarPoblaciones();\r\n    PrepararRestriccionesSelect();\r\n    PrepararPoblacionesSelect();\r\n  },[]);\r\n\r\n  /**\r\n   * Este useEffect activa la generación de tabla de restricciones\r\n   * si los datos de la API han llegado\r\n   */\r\n  useEffect(() => {\r\n    if (arRestricciones !== [] && arRestricciones.length !== 0) {\r\n      guardarBoolMostrarRestricciones(true);\r\n    }\r\n  }, [arRestricciones]);\r\n\r\n\r\n  //Componente que prepara el logo centrado en la parte superior de la página\r\n  function Logo(props) {\r\n    return (\r\n      <>\r\n      <div className={`${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\r\n        <img src={logo} alt=\"Logo RestriCovid\" />  \r\n      </div>\r\n      <div className={`${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\r\n        <h3>Portal privado</h3>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  function SelectPoblacion(props){\r\n    let datosSelectPoblacion = PrepararPoblacionesSelect();\r\n\r\n    return (\r\n      <div className={`m-auto text-center col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12`}>\r\n        <Select\r\n        defaultValue={poblacion}\r\n        onChange={(e) => {guardarPoblacion(e);funcionRecargar();console.log(\"e => \",e)}}\r\n        options={datosSelectPoblacion}\r\n        placeholder={'Elige las restricciones que quieras asignar'}\r\n      />\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  /**\r\n   * Este componente recorrerá los datos de\r\n   * las restricciones proporcionados por la API\r\n   * y las mostrará en un panel en la parte inferior de\r\n   * la ventana\r\n   */\r\n  function Restricciones(props) {\r\n    return (\r\n      <>\r\n        <div className={`m-auto text-center col-xl-4 col-lg-5 col-md-6 col-sm-7 col-11`}>\r\n          <ul className={'list-group'}>\r\n              {props.datosRestricciones.map( (restriccion,i) => {\r\n                return(\r\n                  <>\r\n                    <li key={`liRestriccion${i}`} className={'list-group-item list-group-item-action list-group-item-light mt-2'}>{` ${restriccion.id} :  ${restriccion.abreviacion} `} <BotonEliminar key={`BotonEliminarRestriccion${i}`} funcionRecargar={funcionRecargar} datosRestriccion={restriccion} datosPoblacion={poblacion} texto={'Eliminar restricción'}></BotonEliminar></li>\r\n                  </>\r\n                )\r\n              } )}\r\n          </ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className={'mb-5'}>\r\n      <Logo></Logo>\r\n    </div>       \r\n\r\n    <div className={'mb-3'}>\r\n      <SelectPoblacion/>\r\n    </div>\r\n    \r\n\r\n      {boolMostrarRestricciones === true   ? (\r\n        <>\r\n          <div className={`mt-8 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\r\n            <Alert type=\"success\" message=\"Restricciones cargadas correctamente\" />\r\n          </div>\r\n          <div className={`mb-5 mt-3`}>\r\n            <Restricciones datosRestricciones={arRestricciones}></Restricciones>\r\n          </div>\r\n        </>\r\n      )  : boolMostrarRestricciones === false && poblacion.label !== undefined ? (\r\n        <>\r\n          <div className={`mt-8  m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\r\n            <Alert type=\"error\" message={`No hay restricciones en ${poblacion.label}`} />\r\n          </div>\r\n        </>\r\n      ) : null}\r\n      <div className={`mt-4`}>\r\n        <FormRestricciones funcionRecargar={funcionRecargar} datos={arDatosSelect} poblacion={poblacion}></FormRestricciones>\r\n      </div>\r\n    </>\r\n    \r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default RestriCovid;","C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\data\\APIController.js",[],"C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\ui\\BotonEliminar.js",[],"C:\\Users\\restriuser\\Workspace\\RestriCovid\\RestriCovidPrivatePortal\\src\\ui\\FormRestricciones.js",[],{"ruleId":"28","severity":1,"message":"29","line":19,"column":10,"nodeType":"30","messageId":"31","endLine":19,"endColumn":27},{"ruleId":"28","severity":1,"message":"32","line":19,"column":29,"nodeType":"30","messageId":"31","endLine":19,"endColumn":53},{"ruleId":"28","severity":1,"message":"33","line":20,"column":10,"nodeType":"30","messageId":"31","endLine":20,"endColumn":28},{"ruleId":"28","severity":1,"message":"34","line":20,"column":30,"nodeType":"30","messageId":"31","endLine":20,"endColumn":51},{"ruleId":"35","severity":1,"message":"36","line":94,"column":5,"nodeType":"37","endLine":94,"endColumn":7,"suggestions":"38"},"no-unused-vars","'poblacionesSelect' is assigned a value but never used.","Identifier","unusedVar","'guardarPoblacionesSelect' is assigned a value but never used.","'boolCodigoValidado' is assigned a value but never used.","'guardarCodigoValidado' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'PrepararPoblacionesSelect'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [PrepararPoblacionesSelect]",{"range":"42","text":"43"},[3278,3280],"[PrepararPoblacionesSelect]"]
