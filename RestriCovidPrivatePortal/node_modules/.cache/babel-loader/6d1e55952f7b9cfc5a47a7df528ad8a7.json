{"ast":null,"code":"var _jsxFileName = \"/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/main/RestriCovid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal } from '../data/APIController.js';\nimport { Input, Button, List, Divider, Alert } from 'antd';\nimport { Mapa } from '../mapa/Mapa.js'; //Función principal donde almacenaremos todas las funciones y los componentes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RestriCovid = () => {\n  _s();\n\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ? true : false;\n  }; //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n\n\n  const MostrarRestricciones = async codigoPostal => {\n    if (ValidarCodigoPostal(codigoPostal) === false) {\n      guardarCodigoValidado(false);\n    } else {\n      if ((await (await RestriccionesCodigoPostal(codigoPostal)).length) !== 0) {\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n        console.log(\"objeto restricciones => \", await RestriccionesCodigoPostal(codigoPostal));\n      } else {\n        guardarCodigoValidado(undefined);\n      }\n    }\n  };\n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n\n\n  const cargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n    guardarArPoblaciones(datosPoblaciones);\n  };\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n\n\n  useEffect(() => {\n    if (arPoblaciones.length === 0) {\n      cargarPoblaciones();\n    }\n  }, []);\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n\n  useEffect(() => {\n    if (arRestricciones !== [] || arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]); //Componente que prepara el logo centrado en la parte superior de la página\n\n  function Logo(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo RestriCovid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n\n\n  function Restricciones(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"center\",\n          children: \"Restricciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          bordered: true,\n          dataSource: arRestricciones,\n          renderItem: restriccion => /*#__PURE__*/_jsxDEV(List.Item, {\n            children: ` ${restriccion.poblacion} : ${restriccion.abreviacion}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.dPostal}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'mb-1',\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Introduce tu c\\xF3digo postal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-6 m-auto col-xl-4 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          id: \"id\",\n          type: \"text\",\n          defaultValue: codigoPostal,\n          onChange: e => {\n            guardarCodigoPostal(e.target.value);\n          }\n        }, \"inputPostal\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mb-5 \",\n          id: \"btnMostrarRestricciones\",\n          onClick: () => MostrarRestricciones(codigoPostal),\n          children: \"Mostrar Restricciones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Mapa, {\n        datosMarcadores: arPoblaciones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), boolMostrarRestricciones === true && boolCodigoValidado === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"success\",\n          message: \"Restricciones cargadas correctamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Restricciones, {\n          datos: arRestricciones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : boolCodigoValidado === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"error\",\n          message: \"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : boolCodigoValidado === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"error\",\n          message: \"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que est\\xE1 introduciendo un c\\xF3digo postal de la regi\\xF3n del Pa\\xEDs Vasco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true);\n};\n\n_s(RestriCovid, \"V9mqJzFyA45EdF6VOXV2w7CmAms=\");\n\n_c = RestriCovid;\nexport default RestriCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestriCovid\");","map":{"version":3,"sources":["/home/duvud/Dev/RestriCovid/RestriCovidPublicPortal/src/main/RestriCovid.js"],"names":["React","useState","useEffect","logo","styles","Poblaciones","RestriccionesCodigoPostal","Input","Button","List","Divider","Alert","Mapa","RestriCovid","codigoPostal","guardarCodigoPostal","boolCodigoValidado","guardarCodigoValidado","arRestricciones","guardarArRestricciones","boolMostrarRestricciones","guardarBoolMostrarRestricciones","arPoblaciones","guardarArPoblaciones","ValidarCodigoPostal","test","MostrarRestricciones","length","console","log","undefined","cargarPoblaciones","datosPoblaciones","Logo","props","dImagen","Restricciones","restriccion","poblacion","abreviacion","dPostal","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal } from '../data/APIController.js';\nimport { Input, Button, List, Divider, Alert } from 'antd';\nimport { Mapa } from '../mapa/Mapa.js';\n\n\n\n\n//Función principal donde almacenaremos todas las funciones y los componentes\nconst RestriCovid = () => {\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  \n\n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ?  true : false\n  }\n\n  //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n  const MostrarRestricciones = async codigoPostal => {\n    if(ValidarCodigoPostal(codigoPostal) === false){\n      guardarCodigoValidado(false);\n    }else{\n      if(await (await RestriccionesCodigoPostal(codigoPostal)).length !== 0){\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n        console.log(\"objeto restricciones => \", await RestriccionesCodigoPostal(codigoPostal));\n      }else{\n        guardarCodigoValidado(undefined);\n      }\n      \n    }\n  }\n\n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n  const cargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n    guardarArPoblaciones(datosPoblaciones);\n  }\n\n\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n  useEffect(() => {\n    if(arPoblaciones.length === 0){\n      cargarPoblaciones();\n    }\n  }, []);\n\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n  useEffect(() => {\n    if (arRestricciones !== [] || arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]);\n\n\n  //Componente que prepara el logo centrado en la parte superior de la página\n  function Logo(props) {\n    return (\n      <div className={`${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <img src={logo} alt=\"Logo RestriCovid\" />\n      </div>\n    );\n  }\n\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n  function Restricciones(props) {\n    return (\n      <>\n        <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n          <Divider orientation=\"center\">Restricciones</Divider>\n          <List\n            bordered\n            dataSource={arRestricciones}\n            renderItem={restriccion => (\n            <List.Item>\n                {` ${restriccion.poblacion} : ${restriccion.abreviacion}`}\n            </List.Item>\n            )}\n           />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Logo></Logo>\n      <div className={`${styles.dPostal}`}>\n        <div className={'mb-1'}>\n          <label>Introduce tu código postal</label>\n        </div>\n        <div className={`mt-6 m-auto col-xl-4 col-lg-6 col-md-7 col-sm-9 col-12`}>\n          <Input\n            id=\"id\"\n            key={\"inputPostal\"}\n            type=\"text\"\n            defaultValue={codigoPostal}\n            onChange={(e) => {\n              guardarCodigoPostal(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className={\"mt-3\"}>\n          <Button\n            className={\"mb-5 \"}\n            id=\"btnMostrarRestricciones\"\n            onClick={() => MostrarRestricciones(codigoPostal)}\n          >\n            Mostrar Restricciones\n          </Button>\n        </div>\n      </div>\n      \n      <div id=\"container\">\n        <Mapa datosMarcadores={arPoblaciones}></Mapa>\n      </div>\n       \n\n      {boolMostrarRestricciones === true && boolCodigoValidado === true ? (\n        <>\n          <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"success\" message=\"Restricciones cargadas correctamente\" />\n          </div>\n          <div >\n            <Restricciones datos={arRestricciones}></Restricciones>\n          </div>\n        </>\n      ) : boolCodigoValidado === false ? (\n        <>\n          <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\" />\n          </div>\n        </>\n      ) : boolCodigoValidado === undefined ? (\n        <>\n          <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que está\n            introduciendo un código postal de la región del País Vasco\" />\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default RestriCovid;\n"]},"metadata":{},"sourceType":"module"}