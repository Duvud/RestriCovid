{"ast":null,"code":"var _jsxFileName = \"/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/main/RestriCovid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal } from '../data/APIController.js';\nimport { Input, Button, Alert } from 'antd'; //Función principal donde almacenaremos todas las funciones y los componentes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RestriCovid = () => {\n  _s();\n\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"20100\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ? true : false;\n  }; //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n\n\n  const MostrarRestricciones = async codigoPostal => {\n    if (ValidarCodigoPostal(codigoPostal) === false) {\n      guardarCodigoValidado(false);\n    } else {\n      if ((await (await RestriccionesCodigoPostal(codigoPostal)).length) !== 0) {\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n        console.log(\"objeto restricciones => \", await RestriccionesCodigoPostal(codigoPostal));\n      } else {\n        guardarCodigoValidado(undefined);\n      }\n    }\n  };\n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n\n\n  const cargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n    console.log(\"Datos poblaciones => \", datosPoblaciones);\n    guardarArPoblaciones(datosPoblaciones);\n  };\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n\n\n  useEffect(() => {\n    MostrarRestricciones();\n\n    if (arPoblaciones.length === 0) {\n      cargarPoblaciones();\n    }\n  });\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n\n  useEffect(() => {\n    if (arRestricciones !== [] || arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]); //Componente que prepara el logo centrado en la parte superior de la página\n\n  function Logo(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo RestriCovid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Private Portal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n\n\n  function Restricciones(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: 'list-group',\n          children: props.datos.map(restriccion => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: 'list-group-item list-group-item-action list-group-item-light mt-2',\n                children: ` ${restriccion.id} :  ${restriccion.abreviacion}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), boolMostrarRestricciones === true && boolCodigoValidado === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"success\",\n          message: \"Restricciones cargadas correctamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ` mb-5 mt-3`,\n        children: /*#__PURE__*/_jsxDEV(Restricciones, {\n          datos: arRestricciones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : boolCodigoValidado === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"error\",\n          message: \"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : boolCodigoValidado === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"error\",\n          message: \"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que est\\xE1 introduciendo un c\\xF3digo postal de la regi\\xF3n del Pa\\xEDs Vasco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true);\n};\n\n_s(RestriCovid, \"STCWhe6ROw+VmhujlvMXv0n0zI0=\");\n\n_c = RestriCovid;\nexport default RestriCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestriCovid\");","map":{"version":3,"sources":["/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/main/RestriCovid.js"],"names":["React","useState","useEffect","logo","styles","Poblaciones","RestriccionesCodigoPostal","Input","Button","Alert","RestriCovid","codigoPostal","guardarCodigoPostal","boolCodigoValidado","guardarCodigoValidado","arRestricciones","guardarArRestricciones","boolMostrarRestricciones","guardarBoolMostrarRestricciones","arPoblaciones","guardarArPoblaciones","ValidarCodigoPostal","test","MostrarRestricciones","length","console","log","undefined","cargarPoblaciones","datosPoblaciones","Logo","props","dImagen","dSubtitulo","Restricciones","datos","map","restriccion","id","abreviacion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal } from '../data/APIController.js';\nimport { Input, Button, Alert } from 'antd';\n\n\n\n\n//Función principal donde almacenaremos todas las funciones y los componentes\nconst RestriCovid = () => {\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"20100\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  \n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ?  true : false\n  }\n\n  //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n  const MostrarRestricciones = async codigoPostal => {\n    if(ValidarCodigoPostal(codigoPostal) === false){\n      guardarCodigoValidado(false);\n    }else{\n      if(await (await RestriccionesCodigoPostal(codigoPostal)).length !== 0){\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n        console.log(\"objeto restricciones => \", await RestriccionesCodigoPostal(codigoPostal));\n      }else{\n        guardarCodigoValidado(undefined);\n      }\n      \n    }\n  }\n\n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n  const cargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n    console.log(\"Datos poblaciones => \",datosPoblaciones);\n    guardarArPoblaciones(datosPoblaciones);\n  }\n\n\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n  useEffect(() => {\n    MostrarRestricciones();\n    if(arPoblaciones.length === 0){\n      cargarPoblaciones();\n    }\n  },);\n\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n  useEffect(() => {\n    if (arRestricciones !== [] || arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]);\n\n\n  //Componente que prepara el logo centrado en la parte superior de la página\n  function Logo(props) {\n    return (\n      <>\n      <div className={`${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <img src={logo} alt=\"Logo RestriCovid\" />  \n      </div>\n      <div className={`${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <h3>Private Portal</h3>\n      </div>\n      </>\n    );\n  }\n\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n  function Restricciones(props) {\n    return (\n      <>\n        <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n          <ul className={'list-group'}>\n              {props.datos.map( restriccion => {\n                return(\n                  <>\n                    <li className={'list-group-item list-group-item-action list-group-item-light mt-2'}>{` ${restriccion.id} :  ${restriccion.abreviacion}`}</li>\n                  </>\n                )\n              } )}\n          </ul>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Logo></Logo>\n      \n       \n\n      {boolMostrarRestricciones === true && boolCodigoValidado === true ? (\n        <>\n          <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"success\" message=\"Restricciones cargadas correctamente\" />\n          </div>\n          <div className={` mb-5 mt-3`}>\n            <Restricciones datos={arRestricciones}></Restricciones>\n          </div>\n        </>\n      ) : boolCodigoValidado === false ? (\n        <>\n          <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\" />\n          </div>\n        </>\n      ) : boolCodigoValidado === undefined ? (\n        <>\n          <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que está\n            introduciendo un código postal de la región del País Vasco\" />\n          </div>\n        </>\n      ) : null}\n    </>\n  );\n}\n\nexport default RestriCovid;"]},"metadata":{},"sourceType":"module"}