{"ast":null,"code":"var _jsxFileName = \"/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/main/RestriCovid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal, Restricciones } from '../data/APIController.js';\nimport { Input, Button, Alert } from 'antd';\nimport BotonEliminar from '../ui/BotonEliminar';\nimport FormRestricciones from '../ui/FormRestricciones'; //Función principal donde almacenaremos todas las funciones y los componentes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RestriCovid = () => {\n  _s();\n\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"20100\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  const [arDatosSelect, guardarArSelect] = useState([]);\n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ? true : false;\n  }; //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n\n\n  const MostrarRestricciones = async codigoPostal => {\n    if (ValidarCodigoPostal(codigoPostal) === false) {\n      guardarCodigoValidado(false);\n    } else {\n      if ((await (await RestriccionesCodigoPostal(codigoPostal)).length) !== 0) {\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n      } else {\n        guardarCodigoValidado(undefined);\n      }\n    }\n  };\n\n  const PrepararRestriccionesSelect = async () => {\n    let datosRestricciones = await Restricciones();\n\n    if (datosRestricciones !== undefined) {\n      guardarArSelect(datosRestricciones);\n    }\n  };\n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n\n\n  const CargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n\n    if (datosPoblaciones !== undefined) {\n      guardarArPoblaciones(datosPoblaciones);\n    }\n  };\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n\n\n  useEffect(() => {\n    MostrarRestricciones(codigoPostal);\n    PrepararRestriccionesSelect();\n\n    if (arPoblaciones.length === 0) {\n      CargarPoblaciones();\n    }\n  });\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n\n  useEffect(() => {\n    if (arRestricciones !== [] && arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]); //Componente que prepara el logo centrado en la parte superior de la página\n\n  function Logo(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo RestriCovid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Portal privado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n\n\n  function Restricciones(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [console.log(props), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: 'list-group',\n          children: props.datosRestricciones.map(restriccion => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                className: 'list-group-item list-group-item-action list-group-item-light mt-2',\n                children: [` ${restriccion.id} :  ${restriccion.abreviacion} `, \" \", /*#__PURE__*/_jsxDEV(BotonEliminar, {\n                  datosRestriccion: restriccion,\n                  texto: 'Eliminar restricción'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 159\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'mb-5',\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), boolMostrarRestricciones === true && boolCodigoValidado === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-8 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"success\",\n          message: \"Restricciones cargadas correctamente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-5 mt-3`,\n        children: /*#__PURE__*/_jsxDEV(Restricciones, {\n          datosRestricciones: arRestricciones\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : boolCodigoValidado === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-2mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"error\",\n          message: \"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : boolCodigoValidado === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"error\",\n          message: \"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que est\\xE1 introduciendo un c\\xF3digo postal de la regi\\xF3n del Pa\\xEDs Vasco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormRestricciones, {\n        datos: arDatosSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RestriCovid, \"ny+dKLVuqg8lj9fC//obYkl2hp4=\");\n\n_c = RestriCovid;\nexport default RestriCovid;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestriCovid\");","map":{"version":3,"sources":["/home/duvud/Dev/RestriCovid/RestriCovidPrivatePortal/src/main/RestriCovid.js"],"names":["React","useState","useEffect","logo","styles","Poblaciones","RestriccionesCodigoPostal","Restricciones","Input","Button","Alert","BotonEliminar","FormRestricciones","RestriCovid","codigoPostal","guardarCodigoPostal","boolCodigoValidado","guardarCodigoValidado","arRestricciones","guardarArRestricciones","boolMostrarRestricciones","guardarBoolMostrarRestricciones","arPoblaciones","guardarArPoblaciones","arDatosSelect","guardarArSelect","ValidarCodigoPostal","test","MostrarRestricciones","length","undefined","PrepararRestriccionesSelect","datosRestricciones","CargarPoblaciones","datosPoblaciones","Logo","props","dImagen","dSubtitulo","console","log","map","restriccion","id","abreviacion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from '../res/img/RestriCovid.png';\nimport styles from '../css/RestriCovid.module.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Poblaciones, RestriccionesCodigoPostal, Restricciones } from '../data/APIController.js';\nimport { Input, Button, Alert } from 'antd';\nimport BotonEliminar from '../ui/BotonEliminar'\nimport FormRestricciones from '../ui/FormRestricciones';\n\n\n\n//Función principal donde almacenaremos todas las funciones y los componentes\nconst RestriCovid = () => {\n  //Hooks useState\n  const [codigoPostal, guardarCodigoPostal] = useState(\"20100\");\n  const [boolCodigoValidado, guardarCodigoValidado] = useState(null);\n  const [arRestricciones, guardarArRestricciones] = useState([]);\n  const [boolMostrarRestricciones, guardarBoolMostrarRestricciones] = useState(false);\n  const [arPoblaciones, guardarArPoblaciones] = useState([]);\n  const [arDatosSelect, guardarArSelect] = useState([]);\n  \n  /**\n   * Esta función valida el código postal asegurandose de que hay\n   * 5 numeros del 0-9 y que no haya ningún otro caracter\n   * \n   * @param {str} codigoPostal \n   * @returns false || true\n   */\n  const ValidarCodigoPostal = codigoPostal => {\n    return /[0-9]{5}/.test(codigoPostal) && /[^0-9]/.test(codigoPostal) === false ?  true : false\n  }\n\n  //Está función cargará los datos haciendo una petición a la API y llama al validador de código postal\n  const MostrarRestricciones = async codigoPostal => {\n    if(ValidarCodigoPostal(codigoPostal) === false){\n      guardarCodigoValidado(false);\n    }else{\n      if(await (await RestriccionesCodigoPostal(codigoPostal)).length !== 0){\n        guardarCodigoValidado(true);\n        guardarArRestricciones(await RestriccionesCodigoPostal(codigoPostal));\n      }else{\n        guardarCodigoValidado(undefined);\n      }\n      \n    }\n  }\n  \n\n  const PrepararRestriccionesSelect = async () =>{\n    let datosRestricciones = await Restricciones();\n    if(datosRestricciones !== undefined){\n      guardarArSelect(datosRestricciones);\n    }\n      \n  }\n  \n  /**\n   * Esta función es llamada\n   * por un hook para cargar las poblaciones\n   * lo único que hace es llamar a el metodo importado\n   * poblaciones que consigue los datos\n   * y después guardarlos en el hook arPoblaciones\n   */\n  const CargarPoblaciones = async () => {\n    let datosPoblaciones = await Poblaciones();\n    if(datosPoblaciones !== undefined){\n      guardarArPoblaciones(datosPoblaciones);\n    }\n  }\n\n\n  /**\n   * Este useEffect llama a la funcion que carga las poblaciones\n   * una vez se inicia la página para poder generar los marcadores del mapa\n   */\n  useEffect(() => {\n    MostrarRestricciones(codigoPostal);\n    PrepararRestriccionesSelect();\n    if(arPoblaciones.length === 0){\n      CargarPoblaciones();\n    }\n  },);\n\n  /**\n   * Este useEffect activa la generación de tabla de restricciones\n   * si los datos de la API han llegado\n   */\n  useEffect(() => {\n    if (arRestricciones !== [] && arRestricciones.length !== 0) {\n      guardarBoolMostrarRestricciones(true);\n    }\n  }, [arRestricciones]);\n\n\n  //Componente que prepara el logo centrado en la parte superior de la página\n  function Logo(props) {\n    return (\n      <>\n      <div className={`${styles.dImagen} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <img src={logo} alt=\"Logo RestriCovid\" />  \n      </div>\n      <div className={`${styles.dSubtitulo} col-xl-3 col-lg-4 col-md-5 col-sm-6 col-8`}>\n        <h3>Portal privado</h3>\n      </div>\n      </>\n    );\n  }\n\n  /**\n   * Este componente recorrerá los datos de\n   * las restricciones proporcionados por la API\n   * y las mostrará en un panel en la parte inferior de\n   * la ventana\n   */\n  function Restricciones(props) {\n    return (\n      <>\n      {console.log(props)}\n        <div className={`m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n          <ul className={'list-group'}>\n              {props.datosRestricciones.map( restriccion => {\n                return(\n                  <>\n                    <li className={'list-group-item list-group-item-action list-group-item-light mt-2'}>{` ${restriccion.id} :  ${restriccion.abreviacion} `} <BotonEliminar datosRestriccion={restriccion} texto={'Eliminar restricción'}></BotonEliminar></li>\n                  </>\n                )\n              } )}\n          </ul>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n    <div className={'mb-5'}>\n      <Logo></Logo>\n    </div>       \n\n      {boolMostrarRestricciones === true && boolCodigoValidado === true ? (\n        <>\n          <div className={`mt-8 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"success\" message=\"Restricciones cargadas correctamente\" />\n          </div>\n          <div className={`mb-5 mt-3`}>\n            <Restricciones datosRestricciones={arRestricciones}></Restricciones>\n          </div>\n        </>\n      ) : boolCodigoValidado === false ? (\n        <>\n          <div className={`mt-2mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Por favor, introduce el formato de codigo postal correcto ('12345' por ejemplo)\" />\n          </div>\n        </>\n      ) : boolCodigoValidado === undefined ? (\n        <>\n          <div className={`mt-2 m-auto col-6 text-center col-xl-5 col-lg-6 col-md-7 col-sm-9 col-12`}>\n            <Alert type=\"error\" message=\"Lo siento, ha ocurrido un error al intentar obtener los datos, por favor, asegurese de que está\n            introduciendo un código postal de la región del País Vasco\" />\n          </div>\n        </>\n      ) : null}\n      <div>\n        <FormRestricciones datos={arDatosSelect}></FormRestricciones>\n      </div>\n    </>\n    \n    \n\n  );\n}\n\nexport default RestriCovid;"]},"metadata":{},"sourceType":"module"}